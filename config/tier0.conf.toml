## TIER0 File

blocklist_instance_sources = []

# import_fields tells the parser to only import that set of fields from a specific source
blocklist_url_sources = [
  { url = 'file:///opt/fediblockhole/blocklists/seirdy-tier0.csv', format = 'csv' },
  { url = 'file:///opt/fediblockhole/blocklists/gardenfence.csv', format = 'csv' },
  { url = 'file:///opt/fediblockhole/blocklists/dni.csv', format = 'mastodon_csv' },
]

# List of instances to write blocklist to
blocklist_instance_destinations = [
  # { domain = 'eigenmagic.net', token = '<read_write_token>', max_followed_severity = 'silence'},
]

allowlist_url_sources = [
  { url = 'file:///opt/fediblockhole/blocklists/__allowlist.csv', format = 'csv' },
#  { url = 'file:///opt/fediblockhole/blocklists/birdsite.csv', format = 'csv' },
]

## Store a local copy of the remote blocklists after we fetch them
save_intermediate = false

## Directory to store the local blocklist copies
savedir = '/opt/fediblockhole/blocklists/'


## File to save the fully merged blocklist into
blocklist_savefile = '/opt/fediblockhole/blocklists/_unified_tier0_blocklist.csv'

## Don't push blocklist to instances, even if they're defined above
no_push_instance = true

## Don't fetch blocklists from URLs, even if they're defined above
# no_fetch_url = false

## Don't fetch blocklists from instances, even if they're defined above
# no_fetch_instance = false

## Set the mergeplan to use when dealing with overlaps between blocklists
# The default 'max' mergeplan will use the harshest severity block found for a domain.
# The 'min' mergeplan will use the lightest severity block found for a domain.
mergeplan = 'max'

## Set which fields we import
## 'domain' and 'severity' are always imported, these are additional
## 
#import_fields = ['reject_media', 'reject_reports', 'obfuscate']
import_fields = ['public_comment', 'reject_media', 'reject_reports', 'obfuscate']

## Set which fields we export
## 'domain' and 'severity' are always exported, these are additional
## 
export_fields = ['reject_media', 'reject_reports', 'public_comment', 'obfuscate']
